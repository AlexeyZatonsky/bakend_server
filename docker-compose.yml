version: "3.9"

services:

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command: server /data --console-address ":9001" --address ":9000"
    # Открываем доступ напрямую к MinIO
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web-UI
    expose:
      - "9000"
      - "9001"
    env_file: .env
    environment:
      # Включаем webhook для уведомлений
      MINIO_NOTIFY_WEBHOOK_ENABLE: "on"
      # Явно указываем URL для вебхука
      MINIO_NOTIFY_WEBHOOK_ENDPOINT: "http://app:1086/webhooks/minio/avatar"
      MINIO_NOTIFY_WEBHOOK_AUTH_TOKEN: "${MINIO_WEBHOOK_TOKEN}"
      MINIO_NOTIFY_WEBHOOK_ROUTER: "s3:ObjectCreated:PutObject"
      # Настройки для консоли
      MINIO_BROWSER_REDIRECT_URL: "http://${THIS_SERVER_ADDRESS:-localhost}:9001"
      # Добавляем настройки для консоли
      MINIO_BROWSER_LOGIN_ANIMATION: "off"
      MINIO_DOMAIN: "${THIS_SERVER_ADDRESS:-localhost}"
      MINIO_CONSOLE_ADDRESS: ":9001"
      # Дополнительные настройки 
      MINIO_BROWSER: "on"
      MINIO_SERVER_URL: "http://${THIS_SERVER_ADDRESS:-localhost}:9000"
      # Отключаем проверки браузера и улучшаем доступ для разработки
      MINIO_BROWSER_STRICT_HOSTNAME_CHECK: "off"
    volumes:
      - ../minio-data:/data
    networks:
      - edustream 


  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

    networks:
      - edustream


  app:
    build: .
    container_name: fastapi-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Конфигурация URL-ов для корректной работы
      S3_URL: "${S3_URL}"
      BASE_SERVER_URL: "${BASE_SERVER_URL:-http://localhost}"
      API_PATH: "${API_PATH:-api}"
      MINIO_PATH: "${MINIO_PATH:-minio}"
      THIS_SERVER_ADDRESS: "${THIS_SERVER_ADDRESS:-localhost}"
    working_dir: /app
    volumes:
      - ./:/app
      - ~/.cache/pip:/root/.cache/pip

    # ports:
    #   - "${SERVER_PORT:-1086}:${SERVER_PORT:-1086}"

    expose:
    - "${SERVER_PORT:-1086}"

    depends_on:
      - postgres
      - minio

    networks:
      - edustream


  proxy:
    image: nginx:latest
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"  # Основной доступ
      # Отключаем проброс портов для MinIO, так как они уже проброшены
      # - "9000:9000"  # S3 API
      # - "9001:9001"  # MinIO Web-UI
      - "1086:1086"  # FastAPI (для разработки)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - minio
    networks:
      - edustream


volumes:
  minio-data:
  postgres-data:

networks:
  edustream:
